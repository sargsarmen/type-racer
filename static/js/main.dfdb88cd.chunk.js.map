{"version":3,"sources":["stores/app-store.js","stores/game-store.js","utils/id.js","utils/keyCodeHelpers.js","stores/request-store.js","stores/login-store.js","utils/fetch.js","constants/api.js","utils/service-response.js","services/account-service.js","constants/request-types.js","utils/history.js","actions/account-actions.js","components/layouts/header.js","components/layouts/with-hider-layout.js","components/layouts/login-layout.js","components/game/game-result.js","components/game/game-area.js","services/game-service.js","actions/game-actions.js","components/game/index.js","components/login/index.js","components/history/index.js","components/index.js","index.js"],"names":["AppStore","user","addUser","_this","this","name","decorate","observable","isAuthenticated","computed","action","appStore","GameStore","start","text","intervalId","clearInterval","textSplited","split","map","t","word","c","id","Math","random","toString","substr","char","isWrong","currentText","charIndex","index","isStarted","isFinished","accuracy","speed","time","errorsCount","totalCount","startInterval","stop","forceStop","arguments","length","undefined","saveUserHistory","wpm","date","Date","calculateMetrics","toFixed","self","setInterval","setNewText","key","keyCode","currentWord","currentChar","hasCurrentWordError","some","cw","isAlphaNumeric","isBackspace","substring","newCurrentWord","isSpace","w","gameStore","RequestStore","Object","classCallCheck","setRequestInProcess","requestType","inProcess","requests","set","type","get","requestStore","LoginStore","init","userName","password","error","addGuestUser","guest","onUserNameChanged","onPasswordChanged","addError","loginStore","utils_fetch","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","url","options","request","response","result","wrap","_context","prev","next","assign","headers","Accept","Content-Type","method","body","JSON","stringify","fetch","sent","parse","abrupt","_x","_x2","apply","GET_USER","ServiceResponse","errors","payload","message","push","users","login","_callee2","_context2","Promise","resolve","reject","setTimeout","find","u","fetchApi","concat","api","objectSpread","t0","loginWithToken","_ref3","_callee3","token","_context3","_ref4","_callee4","_context4","_x3","history","createHashHistory","accountService","hasError","localStorage","setItem","_ref2","getItem","logout","removeItem","currentGame","inject","observer","_React$Component","Header","_getPrototypeOf2","_len","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","onLogout","e","preventDefault","inherits","createClass","value","props","react_default","createElement","className","react_router_dom","to","onClick","React","Component","with_hider_layout","children","Fragment","header","login_layout","game_result","onStart","game_area","onTyped","onChange","part","onKeyUp","getRandomText","join","startNewGame","Game","_this$props$gameStore","Login","target","onLogin","_this$props$loginStor","_this$props$loginStor2","placeholder","disabled","h","getTime","toLocaleString","AppRoute","component","Layout","layout","isPrivate","isLogin","react_router","render","AppRouter","_this$props","isInitialising","getRequestByType","components_AppRoute","exact","path","WithHiderLayout","History","LoginLayout","rootElement","document","getElementById","ReactDOM","index_module","stores","components"],"mappings":"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","file":"static/js/main.dfdb88cd.chunk.js","sourcesContent":["import { observable, computed, action, decorate } from \"mobx\";\r\n\r\nclass AppStore {\r\n  user = null;\r\n\r\n  get isAuthenticated() {\r\n    return this.user !== null;\r\n  }\r\n\r\n  get userName() {\r\n    return this.user !== null ? this.user.name : \"\";\r\n  }\r\n\r\n  addUser = user => {\r\n    this.user = user;\r\n  };\r\n}\r\n\r\ndecorate(AppStore, {\r\n  user: observable,\r\n  isAuthenticated: computed,\r\n  addUser: action\r\n});\r\n\r\nconst appStore = new AppStore();\r\n\r\nexport default appStore;\r\n","import { observable, action, decorate } from \"mobx\";\r\n\r\nimport id from \"../utils/id\";\r\nimport { saveUserHistory } from \"../actions/account-actions\";\r\nimport { isAlphaNumeric, isBackspace, isSpace } from \"../utils/keyCodeHelpers\";\r\n\r\nconst gameDuration = 120;\r\nclass GameStore {\r\n  text;\r\n  textSplited;\r\n  currentText;\r\n  charIndex;\r\n  index;\r\n  isStarted;\r\n  isFinished;\r\n  speed;\r\n  accuracy;\r\n  time;\r\n  errorsCount;\r\n  totalCount;\r\n  intervalId;\r\n\r\n  start = text => {\r\n    if (this.intervalId) {\r\n      clearInterval(this.intervalId);\r\n    }\r\n\r\n    this.text = text;\r\n    this.textSplited = text.split(\" \").map(t => ({\r\n      word: t.split(\"\").map(c => ({ id: id(), char: c, isWrong: null }))\r\n    }));\r\n\r\n    this.currentText = \"\";\r\n    this.charIndex = 0;\r\n    this.index = 0;\r\n\r\n    this.isStarted = true;\r\n    this.isFinished = false;\r\n    this.accuracy = 0;\r\n    this.speed = 0;\r\n    this.time = gameDuration;\r\n    this.errorsCount = 0;\r\n    this.totalCount = 0;\r\n    this.startInterval();\r\n  };\r\n\r\n  stop = (forceStop = false) => {\r\n    this.isStarted = false;\r\n    clearInterval(this.intervalId);\r\n\r\n    if (forceStop) {\r\n      this.isFinished = false;\r\n    } else {\r\n      this.isFinished = true;\r\n      saveUserHistory({\r\n        wpm: this.speed,\r\n        accuracy: this.accuracy,\r\n        date: new Date()\r\n      });\r\n    }\r\n  };\r\n\r\n  calculateMetrics = () => {\r\n    if (this.errorsCount === 0 && this.totalCount > 0) {\r\n      this.accuracy = 100;\r\n    } else if (this.totalCount === 0) {\r\n      this.accuracy = 0;\r\n    } else {\r\n      this.accuracy = (\r\n        ((this.totalCount - this.errorsCount) * 100) /\r\n        this.totalCount\r\n      ).toFixed(1);\r\n    }\r\n    this.speed = (\r\n      (this.totalCount / 5 - this.errorsCount) /\r\n      ((gameDuration - this.time) / 60)\r\n    ).toFixed(0);\r\n  };\r\n\r\n  startInterval = () => {\r\n    const self = this;\r\n    this.intervalId = setInterval(() => {\r\n      if (self.time !== 0) {\r\n        self.time--;\r\n      } else {\r\n        self.stop();\r\n      }\r\n    }, 1000);\r\n  };\r\n\r\n  setNewText = (key, keyCode) => {\r\n    const currentWord = this.textSplited[this.index].word;\r\n    const currentChar = currentWord[this.charIndex];\r\n    const hasCurrentWordError = currentWord.some(cw => cw.isWrong);\r\n\r\n    if (isAlphaNumeric(keyCode)) {\r\n      if (hasCurrentWordError && this.charIndex === currentWord.length) {\r\n        return;\r\n      }\r\n      this.currentText += key;\r\n      currentChar.isWrong = currentChar.char !== key;\r\n      if (currentChar.isWrong) {\r\n        this.errorsCount++;\r\n      }\r\n      this.charIndex++;\r\n      this.totalCount++;\r\n    }\r\n\r\n    if (isBackspace(keyCode)) {\r\n      this.currentText = this.currentText.substring(\r\n        0,\r\n        this.currentText.length - 1\r\n      );\r\n      if (this.charIndex > 0) {\r\n        this.charIndex--;\r\n        const newCurrentChar = currentWord[this.charIndex];\r\n        newCurrentChar.isWrong = null;\r\n      } else {\r\n        if (this.index > 0) {\r\n          this.index--;\r\n          const newCurrentWord = this.textSplited[this.index];\r\n          this.charIndex = newCurrentWord.word.length;\r\n        }\r\n      }\r\n    }\r\n\r\n    if (isSpace(keyCode)) {\r\n      if (this.charIndex === currentWord.length) {\r\n        this.charIndex = 0;\r\n        this.index++;\r\n        if (!this.textSplited.some(w => w.word.some(w => w.isWrong))) {\r\n          this.currentText = \"\";\r\n        } else {\r\n          this.currentText += \" \";\r\n        }\r\n        this.totalCount++;\r\n      }\r\n    }\r\n\r\n    if (\r\n      this.index === this.textSplited.length - 1 &&\r\n      this.charIndex === currentWord.length\r\n    ) {\r\n      this.stop();\r\n    }\r\n    this.calculateMetrics();\r\n  };\r\n}\r\n\r\ndecorate(GameStore, {\r\n  text: observable,\r\n  textSplited: observable,\r\n  currentText: observable,\r\n  speed: observable,\r\n  accuracy: observable,\r\n  time: observable,\r\n  isStarted: observable,\r\n  isFinished: observable,\r\n  start: action,\r\n  stop: action\r\n});\r\n\r\nconst gameStore = new GameStore();\r\n\r\nexport default gameStore;\r\n","export default () => {\r\n  return Math.random()\r\n    .toString(36)\r\n    .substr(5, 12);\r\n};\r\n","export const isAlphaNumeric = keyCode => {\r\n  return (\r\n    (keyCode >= 48 && keyCode <= 90) ||\r\n    (keyCode >= 186 && keyCode <= 192) ||\r\n    (keyCode >= 219 && keyCode <= 222)\r\n  );\r\n};\r\n\r\nexport const isBackspace = keyCode => {\r\n  return keyCode === 8;\r\n};\r\n\r\nexport const isSpace = keyCode => {\r\n  return keyCode === 32;\r\n};\r\n","import { observable, action, decorate } from \"mobx\";\r\n\r\nclass RequestStore {\r\n  requests;\r\n\r\n  constructor() {\r\n    this.requests = observable.map({});\r\n  }\r\n\r\n  setRequestInProcess = (requestType, inProcess) => {\r\n    this.requests.set(requestType, inProcess);\r\n  };\r\n\r\n  getRequestByType(type) {\r\n    return this.requests.get(type);\r\n  }\r\n}\r\n\r\ndecorate(RequestStore, {\r\n  requests: observable,\r\n  setRequestInProcess: action\r\n});\r\n\r\nconst requestStore = new RequestStore();\r\n\r\nexport default requestStore;\r\n","import { observable, action, decorate } from \"mobx\";\r\n\r\nclass LoginStore {\r\n  userName;\r\n  password;\r\n  error;\r\n\r\n  constructor() {\r\n    this.init();\r\n  }\r\n\r\n  init = () => {\r\n    this.userName = \"\";\r\n    this.password = \"\";\r\n    this.error = null;\r\n  };\r\n\r\n  addGuestUser = guest => {\r\n    this.guest = guest;\r\n  };\r\n\r\n  addUser = user => {\r\n    this.user = user;\r\n  };\r\n\r\n  onUserNameChanged = userName => {\r\n    this.userName = userName;\r\n    this.error = null;\r\n  };\r\n\r\n  onPasswordChanged = password => {\r\n    this.password = password;\r\n    this.error = null;\r\n  };\r\n\r\n  addError = error => {\r\n    this.error = error;\r\n  };\r\n}\r\n\r\ndecorate(LoginStore, {\r\n  userName: observable,\r\n  password: observable,\r\n  error: observable,\r\n  onUserNameChanged: action,\r\n  onPasswordChanged: action,\r\n  addError: action\r\n});\r\n\r\nconst loginStore = new LoginStore();\r\n\r\nexport default loginStore;\r\n","export default async (url, options) => {\r\n  const request = Object.assign(\r\n    {\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      method: \"POST\"\r\n    },\r\n    options\r\n  );\r\n\r\n  if (request.body && typeof request.body !== \"string\") {\r\n    request.body = JSON.stringify(request.body);\r\n  }\r\n\r\n  const response = await fetch(url, request);\r\n\r\n  let result = await response.text();\r\n\r\n  result = result ? JSON.parse(result) : null;\r\n\r\n  return result;\r\n};\r\n","export const GET_USER = \"https://api.myjson.com/bins/\";\r\nexport const SAVE_HISTORY = \"https://api.myjson.com/bins/\";\r\nexport const GET_RANDOM_TEXT =\r\n  \"https://baconipsum.com/api/?type=all-meat&sentences=3\";\r\n","export default class ServiceResponse {\r\n  constructor() {\r\n    this.errors = [];\r\n    this.payload = null;\r\n  }\r\n\r\n  get hasError() {\r\n    return this.errors.length > 0;\r\n  }\r\n\r\n  addError(message) {\r\n    this.errors.push(message);\r\n  }\r\n}\r\n","import fetchApi from \"../utils/fetch\";\r\nimport { requestStore } from \"../stores\";\r\nimport * as api from \"../constants/api\";\r\nimport * as requestTypes from \"../constants/request-types\";\r\nimport ServiceResponse from \"../utils/service-response\";\r\n\r\nconst users = [\r\n  { id: \"cutec\", userName: \"user1\", password: \"qwerty\" },\r\n  { id: \"177x90\", userName: \"user2\", password: \"qwerty\" }\r\n];\r\n\r\nexport const login = async request => {\r\n  requestStore.setRequestInProcess(requestTypes.LOGIN_REQUEST, true);\r\n\r\n  return new Promise((resolve, reject) => {\r\n    setTimeout(async () => {\r\n      const response = new ServiceResponse();\r\n\r\n      const user = users.find(\r\n        u => u.userName === request.userName && u.password === request.password\r\n      );\r\n      if (user) {\r\n        try {\r\n          const payload = await fetchApi(`${api.GET_USER}${user.id}`, {\r\n            method: \"GET\",\r\n            headers: {}\r\n          });\r\n          if (payload) {\r\n            response.payload = { id: user.id, ...payload };\r\n          }\r\n        } catch (err) {\r\n          response.addError(err.message);\r\n        }\r\n      } else {\r\n        response.addError(\"UserName or password is wrong.\");\r\n      }\r\n\r\n      requestStore.setRequestInProcess(requestTypes.LOGIN_REQUEST, false);\r\n      resolve(response);\r\n    }, 500);\r\n  });\r\n};\r\n\r\nexport const loginWithToken = async token => {\r\n  requestStore.setRequestInProcess(requestTypes.LOGIN_REQUEST, true);\r\n  const response = new ServiceResponse();\r\n\r\n  try {\r\n    const payload = await fetchApi(`${api.GET_USER}${token}`, {\r\n      method: \"GET\",\r\n      headers: {}\r\n    });\r\n    if (payload) {\r\n      response.payload = { id: token, ...payload };\r\n    }\r\n  } catch (err) {\r\n    response.addError(err.message);\r\n  }\r\n\r\n  requestStore.setRequestInProcess(requestTypes.LOGIN_REQUEST, false);\r\n\r\n  return response;\r\n};\r\n\r\nexport const saveUserHistory = async user => {\r\n  requestStore.setRequestInProcess(requestTypes.SAVE_HISTORY_REQUEST, true);\r\n\r\n  const response = new ServiceResponse();\r\n\r\n  try {\r\n    const payload = await fetchApi(`${api.SAVE_HISTORY}${user.id}`, {\r\n      method: \"PUT\",\r\n      body: user\r\n    });\r\n\r\n    if (payload) {\r\n      response.payload = payload;\r\n    }\r\n  } catch (err) {\r\n    response.addError(err.message);\r\n  }\r\n\r\n  requestStore.setRequestInProcess(requestTypes.SAVE_HISTORY_REQUEST, false);\r\n\r\n  return response;\r\n};\r\n","export const INIT_APP = \"INIT_APP\";\r\nexport const LOGIN_REQUEST = \"LOGIN_REQUEST\";\r\nexport const REGISTER_REQUEST = \"REGISTER_REQUEST\";\r\nexport const GET_RANDOM_TEXT_REQUEST = \"GET_RANDOM_TEXT_REQUEST\";\r\nexport const SAVE_HISTORY_REQUEST = \"SAVE_HISTORY_REQUEST\";\r\n","import { createHashHistory } from \"history\";\r\n\r\nconst history = createHashHistory();\r\nexport default history;\r\n","import { appStore, loginStore } from \"../stores\";\r\nimport * as accountService from \"../services/account-service\";\r\nimport { requestStore } from \"../stores\";\r\nimport * as requestTypes from \"../constants/request-types\";\r\nimport history from \"../utils/history\";\r\n\r\nexport const login = async request => {\r\n  const response = await accountService.login(request);\r\n  if (!response.hasError) {\r\n    localStorage.setItem(\"token\", response.payload.id);\r\n\r\n    appStore.addUser(response.payload);\r\n    history.push(\"/\");\r\n  } else {\r\n    loginStore.addError(response.errors);\r\n  }\r\n};\r\n\r\nexport const init = async () => {\r\n  requestStore.setRequestInProcess(requestTypes.INIT_APP, true);\r\n  const token = localStorage.getItem(\"token\");\r\n\r\n  if (token) {\r\n    const response = await accountService.loginWithToken(token);\r\n    if (!response.hasError) {\r\n      appStore.addUser(response.payload);\r\n      history.push(\"/\");\r\n    }\r\n  }\r\n\r\n  requestStore.setRequestInProcess(requestTypes.INIT_APP, false);\r\n};\r\n\r\nexport const logout = () => {\r\n  localStorage.removeItem(\"token\");\r\n  appStore.addUser(null);\r\n};\r\n\r\nexport const saveUserHistory = async currentGame => {\r\n  appStore.user.history.push(currentGame);\r\n\r\n  const response = await accountService.saveUserHistory(appStore.user);\r\n\r\n  if (!response.hasError) {\r\n    appStore.addUser(response.payload);\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport { inject, observer } from \"mobx-react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { logout } from \"../../actions/account-actions\";\r\n\r\nexport default inject(\"appStore\")(\r\n  observer(\r\n    class Header extends React.Component {\r\n      onLogout = e => {\r\n        e.preventDefault();\r\n        logout();\r\n      };\r\n\r\n      render() {\r\n        const { userName } = this.props.appStore;\r\n        return (\r\n          <header>\r\n            <div className=\"header-content cont-1120\">\r\n              <div className=\"head-left\">\r\n                <h1>TypeRacer</h1>\r\n              </div>\r\n              <div className=\"head-center\">\r\n                <Link className=\"link\" to=\"/\">\r\n                  Game\r\n                </Link>\r\n                <Link className=\"link\" to=\"/history\">\r\n                  History\r\n                </Link>\r\n              </div>\r\n              <div className=\"head-right\">\r\n                <span className=\"marg-lr-20\">{userName}</span>\r\n                <button className=\"btn btn-green\" onClick={this.onLogout}>\r\n                  Logout\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </header>\r\n        );\r\n      }\r\n    }\r\n  )\r\n);\r\n","import React from \"react\";\r\nimport Header from \"./header\";\r\n\r\nexport default props => {\r\n  const { children } = props;\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Header />\r\n      <main className=\"cont-1120\">{children}</main>\r\n    </React.Fragment>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nexport default props => {\r\n  const { children } = props;\r\n\r\n  return <main>{children}</main>;\r\n};\r\n","import React from \"react\";\r\n\r\nexport default ({ accuracy, speed, onStart }) => {\r\n  return (\r\n    <div className=\"game-result\">\r\n      <div>\r\n        <h3>Game results</h3>\r\n        <p>{`Accuracy: ${accuracy} %`}</p>\r\n        <p>{`Speed: ${speed} wpm`}</p>\r\n      </div>\r\n      <input\r\n        className=\"btn btn-green-border\"\r\n        type=\"button\"\r\n        value=\"Start new game\"\r\n        onClick={onStart}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nexport default ({\r\n  time,\r\n  speed,\r\n  accuracy,\r\n  textSplited,\r\n  currentText,\r\n  onTyped,\r\n  onChange,\r\n  onStart\r\n}) => {\r\n  return (\r\n    <div>\r\n      <div className=\"game-info\">\r\n        <p>{`Time: ${time}`}</p>\r\n        <p>{`Speed: ${speed} wpm`}</p>\r\n        <p>{`Accuracy:  ${accuracy} %`}</p>\r\n      </div>\r\n      <div className=\"game-text\">\r\n        {textSplited.map(part => {\r\n          return part.word.map((char, index) => {\r\n            let className = \"txt\",\r\n              text = char.char;\r\n\r\n            if (char.isWrong === true) {\r\n              className = \"wrong-txt\";\r\n            }\r\n            if (char.isWrong === false) {\r\n              className = \"right-txt\";\r\n            }\r\n            if (index === part.word.length - 1) {\r\n              text += \" \";\r\n            }\r\n\r\n            return (\r\n              <span key={char.id} className={className}>\r\n                {text}\r\n              </span>\r\n            );\r\n          });\r\n        })}\r\n      </div>\r\n      <div className=\"game-inp\">\r\n        <input\r\n          type=\"text\"\r\n          value={currentText}\r\n          onKeyUp={onTyped}\r\n          onChange={onChange}\r\n        />\r\n      </div>\r\n      <div className=\"text-center\">\r\n        <input\r\n          className=\"btn btn-green-border\"\r\n          type=\"button\"\r\n          value=\"Restart game\"\r\n          onClick={onStart}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import fetchApi from \"../utils/fetch\";\r\nimport { requestStore } from \"../stores\";\r\nimport * as api from \"../constants/api\";\r\nimport * as requestTypes from \"../constants/request-types\";\r\nimport ServiceResponse from \"../utils/service-response\";\r\n\r\nexport const getRandomText = async () => {\r\n  requestStore.setRequestInProcess(requestTypes.GET_RANDOM_TEXT_REQUEST, true);\r\n\r\n  const response = new ServiceResponse();\r\n\r\n  try {\r\n    const payload = await fetchApi(api.GET_RANDOM_TEXT, {\r\n      method: \"GET\",\r\n      headers: {}\r\n    });\r\n    if (payload && payload.length > 0) {\r\n      response.payload = payload.join(\"\");\r\n    }\r\n  } catch (err) {\r\n    response.addError(err.message);\r\n  }\r\n\r\n  requestStore.setRequestInProcess(requestTypes.GET_RANDOM_TEXT_REQUEST, false);\r\n\r\n  return response;\r\n};\r\n","import { gameStore } from \"../stores\";\r\nimport { getRandomText } from \"../services/game-service\";\r\n\r\nexport const startNewGame = async () => {\r\n  const response = await getRandomText();\r\n  if (!response.hasError) {\r\n    gameStore.start(response.payload);\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport { inject, observer } from \"mobx-react\";\r\n\r\nimport GameResult from \"./game-result\";\r\nimport GameArea from \"./game-area\";\r\nimport { startNewGame } from \"../../actions/game-actions\";\r\n\r\nexport default inject(\"gameStore\")(\r\n  observer(\r\n    class Game extends React.Component {\r\n      componentDidMount() {\r\n        const { stop } = this.props.gameStore;\r\n        stop(true);\r\n      }\r\n\r\n      componentWillUnmount() {\r\n        const { stop } = this.props.gameStore;\r\n        stop(true);\r\n      }\r\n\r\n      onStart = () => {\r\n        startNewGame();\r\n      };\r\n\r\n      onTyped = e => {\r\n        const { setNewText } = this.props.gameStore;\r\n        setNewText(e.key, e.keyCode);\r\n      };\r\n\r\n      onChange = e => {};\r\n\r\n      render() {\r\n        const {\r\n          isStarted,\r\n          isFinished,\r\n          textSplited,\r\n          currentText,\r\n          accuracy,\r\n          speed,\r\n          time\r\n        } = this.props.gameStore;\r\n\r\n        return (\r\n          <div className=\"marg-tb-20\">\r\n            {isStarted && !isFinished && (\r\n              <GameArea\r\n                time={time}\r\n                speed={speed}\r\n                accuracy={accuracy}\r\n                textSplited={textSplited}\r\n                currentText={currentText}\r\n                onTyped={this.onTyped}\r\n                onStart={this.onStart}\r\n                onChange={this.onChange}\r\n              />\r\n            )}\r\n            {!isStarted && !isFinished && (\r\n              <div className=\"start-game\">\r\n                <h3>Improve your typing skills on your own</h3>\r\n                <input\r\n                  className=\"btn btn-green-border\"\r\n                  type=\"button\"\r\n                  value=\"Start game\"\r\n                  onClick={this.onStart}\r\n                />\r\n              </div>\r\n            )}\r\n            {!isStarted && isFinished && (\r\n              <GameResult\r\n                accuracy={accuracy}\r\n                speed={speed}\r\n                onStart={this.onStart}\r\n              />\r\n            )}\r\n          </div>\r\n        );\r\n      }\r\n    }\r\n  )\r\n);\r\n","import React from \"react\";\r\nimport { inject, observer } from \"mobx-react\";\r\nimport { login } from \"../../actions/account-actions\";\r\n\r\nexport default inject(\"loginStore\")(\r\n  observer(\r\n    class Login extends React.Component {\r\n      componentDidMount() {\r\n        const { init } = this.props.loginStore;\r\n        init();\r\n      }\r\n\r\n      onUserNameChanged = e => {\r\n        const { onUserNameChanged } = this.props.loginStore;\r\n        onUserNameChanged(e.target.value);\r\n      };\r\n\r\n      onPasswordChanged = e => {\r\n        const { onPasswordChanged } = this.props.loginStore;\r\n        onPasswordChanged(e.target.value);\r\n      };\r\n\r\n      onLogin = () => {\r\n        const { userName, password, addError } = this.props.loginStore;\r\n        if (!userName) {\r\n          addError(\"Fill UserName.\");\r\n        } else if (!password) {\r\n          addError(\"Fill Password.\");\r\n        } else {\r\n          login({ userName, password });\r\n        }\r\n      };\r\n\r\n      render() {\r\n        const { error, userName, password } = this.props.loginStore;\r\n\r\n        return (\r\n          <div className=\"login\">\r\n            <div>\r\n              <h1 className=\"marg-b15\">TypeRacer</h1>\r\n              <div>\r\n                {error && <span className=\"eror-text\">{error}</span>}\r\n                <div className=\"inp-block\">\r\n                  <input\r\n                    type=\"text\"\r\n                    placeholder=\"UserName\"\r\n                    value={userName}\r\n                    onChange={this.onUserNameChanged}\r\n                  />\r\n                </div>\r\n                <div className=\"inp-block\">\r\n                  <input\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    value={password}\r\n                    onChange={this.onPasswordChanged}\r\n                  />\r\n                </div>\r\n                <div>\r\n                  <input\r\n                    className=\"btn btn-green\"\r\n                    type=\"button\"\r\n                    value=\"Login\"\r\n                    disabled={error !== null}\r\n                    onClick={this.onLogin}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        );\r\n      }\r\n    }\r\n  )\r\n);\r\n","import React from \"react\";\r\nimport { inject, observer } from \"mobx-react\";\r\n\r\nexport default inject(\"appStore\")(\r\n  observer(({ appStore }) => {\r\n    const { history } = appStore.user;\r\n    return (\r\n      <div>\r\n        <ul className=\"history-head\">\r\n          <li>Date</li>\r\n          <li>Accuracy</li>\r\n          <li>Speed</li>\r\n        </ul>\r\n        {history.map(h => {\r\n          const date = new Date(h.date);\r\n          return (\r\n            <ul className=\"history-content\" key={date.getTime()}>\r\n              <li>{date.toLocaleString(\"en-US\")}</li>\r\n              <li>{`${h.accuracy} %`}</li>\r\n              <li>{`${h.wpm} WPM`}</li>\r\n            </ul>\r\n          );\r\n        })}\r\n      </div>\r\n    );\r\n  })\r\n);\r\n","import React from \"react\";\r\nimport { inject, observer } from \"mobx-react\";\r\nimport { Router, Route, Switch, Redirect } from \"react-router-dom\";\r\n\r\nimport WithHiderLayout from \"./layouts/with-hider-layout\";\r\nimport LoginLayout from \"./layouts/login-layout\";\r\nimport Game from \"./game/\";\r\nimport Login from \"./login/\";\r\nimport History from \"./history/\";\r\nimport { init } from \"../actions/account-actions\";\r\nimport history from \"../utils/history\";\r\nimport { INIT_APP } from \"../constants/request-types\";\r\n\r\nconst AppRoute = ({\r\n  component: Component,\r\n  layout: Layout,\r\n  isPrivate,\r\n  isAuthenticated,\r\n  isLogin\r\n}) => {\r\n  return (\r\n    <Route\r\n      render={props => {\r\n        if (isPrivate && !isAuthenticated) {\r\n          return <Redirect to=\"/login\" />;\r\n        }\r\n        if (isLogin && isAuthenticated) {\r\n          return <Redirect to=\"/\" />;\r\n        }\r\n        return (\r\n          <React.Fragment>\r\n            <Layout>\r\n              <Component {...props} />\r\n            </Layout>\r\n          </React.Fragment>\r\n        );\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default inject(\"appStore\", \"requestStore\")(\r\n  observer(\r\n    class AppRouter extends React.Component {\r\n      componentDidMount() {\r\n        init();\r\n      }\r\n\r\n      render() {\r\n        const { appStore, requestStore } = this.props;\r\n        const isInitialising = requestStore.getRequestByType(INIT_APP);\r\n        const { isAuthenticated } = appStore;\r\n\r\n        return (\r\n          <Router history={history}>\r\n            {!isInitialising && (\r\n              <Switch>\r\n                <AppRoute\r\n                  exact\r\n                  path=\"/\"\r\n                  component={Game}\r\n                  layout={WithHiderLayout}\r\n                  isPrivate\r\n                  isAuthenticated={isAuthenticated}\r\n                />\r\n                <AppRoute\r\n                  exact\r\n                  path=\"/history\"\r\n                  component={History}\r\n                  layout={WithHiderLayout}\r\n                  isPrivate\r\n                  isAuthenticated={isAuthenticated}\r\n                />\r\n                <AppRoute\r\n                  exact\r\n                  path=\"/login\"\r\n                  component={Login}\r\n                  layout={LoginLayout}\r\n                  isLogin\r\n                  isAuthenticated={isAuthenticated}\r\n                />\r\n              </Switch>\r\n            )}\r\n          </Router>\r\n        );\r\n      }\r\n    }\r\n  )\r\n);\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"mobx-react\";\r\n\r\nimport App from \"./components\";\r\nimport * as stores from \"./stores\";\r\nimport \"./styles.css\";\r\n\r\nconst AppRouter = () => {\r\n  return (\r\n    <Provider key=\"provider\" {...stores}>\r\n      <App />\r\n    </Provider>\r\n  );\r\n};\r\n\r\nconst rootElement = document.getElementById(\"root\");\r\nReactDOM.render(<AppRouter />, rootElement);\r\n"],"sourceRoot":""}