{"version":3,"sources":["stores/app-store.js","stores/game-store.js","utils/id.js","stores/request-store.js","stores/login-store.js","utils/fetch.js","constants/api.js","utils/service-response.js","services/account-service.js","constants/request-types.js","utils/history.js","actions/account-actions.js","components/layouts/header.js","components/layouts/with-hider-layout.js","components/layouts/login-layout.js","components/game/game-result.js","components/game/game-area.js","services/game-service.js","actions/game-actions.js","components/game/index.js","components/login/index.js","components/history/index.js","components/index.js","index.js"],"names":["AppStore","user","addUser","_this","this","name","decorate","observable","isAuthenticated","computed","action","appStore","GameStore","start","text","textSplited","split","map","t","id","Math","random","toString","substr","isWrong","currentText","index","isStarted","isFinished","accuracy","speed","time","numberOfKeystroke","startInterval","stop","forceStop","arguments","length","undefined","clearInterval","intervalId","saveUserHistory","wpm","date","Date","calculateSpeed","wrongCount","filter","rightCount","accurateWordPercentages","Number","isNaN","self","setInterval","setNewText","current","startsWith","trim","gameStore","RequestStore","Object","classCallCheck","setRequestInProcess","requestType","inProcess","requests","set","type","get","requestStore","LoginStore","init","userName","password","error","addGuestUser","guest","onUserNameChanged","onPasswordChanged","addError","loginStore","utils_fetch","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","url","options","request","response","result","wrap","_context","prev","next","assign","headers","Accept","Content-Type","method","body","JSON","stringify","fetch","sent","parse","abrupt","_x","_x2","apply","GET_USER","ServiceResponse","errors","payload","message","push","users","login","_callee2","_context2","Promise","resolve","reject","setTimeout","find","u","fetchApi","concat","api","objectSpread","t0","loginWithToken","_ref3","_callee3","token","_context3","_ref4","_callee4","_context4","_x3","history","createHashHistory","accountService","hasError","localStorage","setItem","_ref2","getItem","logout","removeItem","currentGame","inject","observer","_React$Component","Header","_getPrototypeOf2","_len","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","onLogout","e","preventDefault","inherits","createClass","key","value","props","react_default","createElement","className","react_router_dom","to","onClick","React","Component","with_hider_layout","children","Fragment","header","login_layout","game_result","onStart","game_area","onTyped","part","onChange","getRandomText","join","startNewGame","Game","target","_this$props$gameStore","Login","onLogin","_this$props$loginStor","_this$props$loginStor2","placeholder","disabled","History","h","getTime","toLocaleString","AppRoute","component","Layout","layout","isPrivate","isLogin","react_router","render","AppRouter","_this$props","isInitialising","getRequestByType","components_AppRoute","exact","path","WithHiderLayout","LoginLayout","rootElement","document","getElementById","ReactDOM","index_module","stores","components"],"mappings":"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","file":"static/js/main.905d40f0.chunk.js","sourcesContent":["import { observable, computed, action, decorate } from \"mobx\";\r\n\r\nclass AppStore {\r\n  user = null;\r\n\r\n  get isAuthenticated() {\r\n    return this.user !== null;\r\n  }\r\n\r\n  get userName() {\r\n    return this.user !== null ? this.user.name : \"\";\r\n  }\r\n\r\n  addUser = user => {\r\n    this.user = user;\r\n  };\r\n}\r\n\r\ndecorate(AppStore, {\r\n  user: observable,\r\n  isAuthenticated: computed,\r\n  addUser: action\r\n});\r\n\r\nconst appStore = new AppStore();\r\n\r\nexport default appStore;\r\n","import { observable, action, decorate } from \"mobx\";\r\n\r\nimport id from \"../utils/id\";\r\nimport { saveUserHistory } from \"../actions/account-actions\";\r\n\r\nclass GameStore {\r\n  text;\r\n  textSplited;\r\n  currentText;\r\n  index;\r\n  isStarted;\r\n  speed;\r\n  accuracy;\r\n  time;\r\n  intervalId;\r\n  numberOfKeystroke;\r\n  isFinished;\r\n\r\n  start = text => {\r\n    this.text = text;\r\n    this.textSplited = text\r\n      .split(\" \")\r\n      .map(t => ({ id: id(), text: t, isWrong: null }));\r\n    this.currentText = \"\";\r\n    this.index = 0;\r\n    this.isStarted = true;\r\n    this.isFinished = false;\r\n    this.accuracy = 0;\r\n    this.speed = 0;\r\n    this.time = 90;\r\n    this.numberOfKeystroke = 0;\r\n    this.startInterval();\r\n  };\r\n\r\n  stop = (forceStop = false) => {\r\n    this.isStarted = false;\r\n    clearInterval(this.intervalId);\r\n\r\n    if (forceStop) {\r\n      this.isFinished = false;\r\n    } else {\r\n      this.isFinished = true;\r\n      saveUserHistory({ wpm: 25, accuracy: 54.45, date: new Date() });\r\n    }\r\n  };\r\n\r\n  calculateSpeed = () => {\r\n    const wrongCount = this.textSplited.filter(t => t.isWrong === true).length;\r\n    const rightCount = this.textSplited.filter(t => t.isWrong === false).length;\r\n    const accurateWordPercentages =\r\n      (rightCount / (wrongCount + rightCount)) * 100;\r\n\r\n    if (Number.isNaN(accurateWordPercentages)) {\r\n      this.speed = 0;\r\n    } else {\r\n      this.speed =\r\n        (this.numberOfKeystroke / (120 - this.time)) * accurateWordPercentages;\r\n    }\r\n  };\r\n\r\n  startInterval = () => {\r\n    const self = this;\r\n    this.intervalId = setInterval(() => {\r\n      if (self.time !== 0) {\r\n        self.time--;\r\n      } else {\r\n        self.stop();\r\n      }\r\n    }, 1000);\r\n  };\r\n\r\n  setNewText = text => {\r\n    this.numberOfKeystroke++;\r\n\r\n    const current = this.textSplited[this.index];\r\n    current.isWrong = !current.text.startsWith(text.trim());\r\n\r\n    if (\r\n      !current.isWrong &&\r\n      current.text.length === text.length - 1 &&\r\n      text[text.length - 1] === \" \"\r\n    ) {\r\n      this.currentText = \"\";\r\n      this.index++;\r\n      if (this.index >= this.textSplited.length) {\r\n        this.stop();\r\n      }\r\n\r\n      this.calculateSpeed();\r\n    } else {\r\n      this.currentText = text;\r\n    }\r\n  };\r\n}\r\n\r\ndecorate(GameStore, {\r\n  text: observable,\r\n  textSplited: observable,\r\n  currentText: observable,\r\n  speed: observable,\r\n  accuracy: observable,\r\n  time: observable,\r\n  isStarted: observable,\r\n  isFinished: observable,\r\n  start: action,\r\n  stop: action\r\n});\r\n\r\nconst gameStore = new GameStore();\r\n\r\nexport default gameStore;\r\n","export default () => {\r\n  return Math.random()\r\n    .toString(36)\r\n    .substr(5, 12);\r\n};\r\n","import { observable, action, decorate } from \"mobx\";\r\n\r\nclass RequestStore {\r\n  requests;\r\n\r\n  constructor() {\r\n    this.requests = observable.map({});\r\n  }\r\n\r\n  setRequestInProcess = (requestType, inProcess) => {\r\n    this.requests.set(requestType, inProcess);\r\n  };\r\n\r\n  getRequestByType(type) {\r\n    return this.requests.get(type);\r\n  }\r\n}\r\n\r\ndecorate(RequestStore, {\r\n  requests: observable,\r\n  setRequestInProcess: action\r\n});\r\n\r\nconst requestStore = new RequestStore();\r\n\r\nexport default requestStore;\r\n","import { observable, action, decorate } from \"mobx\";\r\n\r\nclass LoginStore {\r\n  userName;\r\n  password;\r\n  error;\r\n\r\n  constructor() {\r\n    this.init();\r\n  }\r\n\r\n  init = () => {\r\n    this.userName = \"\";\r\n    this.password = \"\";\r\n    this.error = null;\r\n  };\r\n\r\n  addGuestUser = guest => {\r\n    this.guest = guest;\r\n  };\r\n\r\n  addUser = user => {\r\n    this.user = user;\r\n  };\r\n\r\n  onUserNameChanged = userName => {\r\n    this.userName = userName;\r\n    this.error = null;\r\n  };\r\n\r\n  onPasswordChanged = password => {\r\n    this.password = password;\r\n    this.error = null;\r\n  };\r\n\r\n  addError = error => {\r\n    this.error = error;\r\n  };\r\n}\r\n\r\ndecorate(LoginStore, {\r\n  userName: observable,\r\n  password: observable,\r\n  error: observable,\r\n  onUserNameChanged: action,\r\n  onPasswordChanged: action,\r\n  addError: action\r\n});\r\n\r\nconst loginStore = new LoginStore();\r\n\r\nexport default loginStore;\r\n","export default async (url, options) => {\r\n  const request = Object.assign(\r\n    {\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      method: \"POST\"\r\n    },\r\n    options\r\n  );\r\n\r\n  if (request.body && typeof request.body !== \"string\") {\r\n    request.body = JSON.stringify(request.body);\r\n  }\r\n\r\n  const response = await fetch(url, request);\r\n\r\n  let result = await response.text();\r\n\r\n  result = result ? JSON.parse(result) : null;\r\n\r\n  return result;\r\n};\r\n","export const GET_USER = \"https://api.myjson.com/bins/\";\r\nexport const SAVE_HISTORY = \"https://api.myjson.com/bins/\";\r\nexport const GET_RANDOM_TEXT =\r\n  \"https://baconipsum.com/api/?type=all-meat&sentences=3\";\r\n","export default class ServiceResponse {\r\n  constructor() {\r\n    this.errors = [];\r\n    this.payload = null;\r\n  }\r\n\r\n  get hasError() {\r\n    return this.errors.length > 0;\r\n  }\r\n\r\n  addError(message) {\r\n    this.errors.push(message);\r\n  }\r\n}\r\n","import fetchApi from \"../utils/fetch\";\r\nimport { requestStore } from \"../stores\";\r\nimport * as api from \"../constants/api\";\r\nimport * as requestTypes from \"../constants/request-types\";\r\nimport ServiceResponse from \"../utils/service-response\";\r\n\r\nconst users = [\r\n  { id: \"cutec\", userName: \"user1\", password: \"qwerty\" },\r\n  { id: \"177x90\", userName: \"user2\", password: \"qwerty\" }\r\n];\r\n\r\nexport const login = async request => {\r\n  requestStore.setRequestInProcess(requestTypes.LOGIN_REQUEST, true);\r\n\r\n  return new Promise((resolve, reject) => {\r\n    setTimeout(async () => {\r\n      const response = new ServiceResponse();\r\n\r\n      const user = users.find(\r\n        u => u.userName === request.userName && u.password === request.password\r\n      );\r\n      if (user) {\r\n        try {\r\n          const payload = await fetchApi(`${api.GET_USER}${user.id}`, {\r\n            method: \"GET\",\r\n            headers: {}\r\n          });\r\n          if (payload) {\r\n            response.payload = { id: user.id, ...payload };\r\n          }\r\n        } catch (err) {\r\n          response.addError(err.message);\r\n        }\r\n      } else {\r\n        response.addError(\"UserName or password is wrong.\");\r\n      }\r\n\r\n      requestStore.setRequestInProcess(requestTypes.LOGIN_REQUEST, false);\r\n      resolve(response);\r\n    }, 500);\r\n  });\r\n};\r\n\r\nexport const loginWithToken = async token => {\r\n  requestStore.setRequestInProcess(requestTypes.LOGIN_REQUEST, true);\r\n  const response = new ServiceResponse();\r\n\r\n  try {\r\n    const payload = await fetchApi(`${api.GET_USER}${token}`, {\r\n      method: \"GET\",\r\n      headers: {}\r\n    });\r\n    if (payload) {\r\n      response.payload = { id: token, ...payload };\r\n    }\r\n  } catch (err) {\r\n    response.addError(err.message);\r\n  }\r\n\r\n  requestStore.setRequestInProcess(requestTypes.LOGIN_REQUEST, false);\r\n\r\n  return response;\r\n};\r\n\r\nexport const saveUserHistory = async user => {\r\n  requestStore.setRequestInProcess(requestTypes.SAVE_HISTORY_REQUEST, true);\r\n\r\n  const response = new ServiceResponse();\r\n\r\n  try {\r\n    const payload = await fetchApi(`${api.SAVE_HISTORY}${user.id}`, {\r\n      method: \"PUT\",\r\n      body: user\r\n    });\r\n\r\n    if (payload) {\r\n      response.payload = payload;\r\n    }\r\n  } catch (err) {\r\n    response.addError(err.message);\r\n  }\r\n\r\n  requestStore.setRequestInProcess(requestTypes.SAVE_HISTORY_REQUEST, false);\r\n\r\n  return response;\r\n};\r\n","export const INIT_APP = \"INIT_APP\";\r\nexport const LOGIN_REQUEST = \"LOGIN_REQUEST\";\r\nexport const REGISTER_REQUEST = \"REGISTER_REQUEST\";\r\nexport const GET_RANDOM_TEXT_REQUEST = \"GET_RANDOM_TEXT_REQUEST\";\r\nexport const SAVE_HISTORY_REQUEST = \"SAVE_HISTORY_REQUEST\";\r\n","import { createHashHistory } from \"history\";\r\n\r\nconst history = createHashHistory();\r\nexport default history;\r\n","import { appStore, loginStore } from \"../stores\";\r\nimport * as accountService from \"../services/account-service\";\r\nimport { requestStore } from \"../stores\";\r\nimport * as requestTypes from \"../constants/request-types\";\r\nimport history from \"../utils/history\";\r\n\r\nexport const login = async request => {\r\n  const response = await accountService.login(request);\r\n  if (!response.hasError) {\r\n    localStorage.setItem(\"token\", response.payload.id);\r\n\r\n    appStore.addUser(response.payload);\r\n    history.push(\"/\");\r\n  } else {\r\n    loginStore.addError(response.errors);\r\n  }\r\n};\r\n\r\nexport const init = async () => {\r\n  requestStore.setRequestInProcess(requestTypes.INIT_APP, true);\r\n  const token = localStorage.getItem(\"token\");\r\n\r\n  if (token) {\r\n    const response = await accountService.loginWithToken(token);\r\n    if (!response.hasError) {\r\n      appStore.addUser(response.payload);\r\n      history.push(\"/\");\r\n    }\r\n  }\r\n\r\n  requestStore.setRequestInProcess(requestTypes.INIT_APP, false);\r\n};\r\n\r\nexport const logout = () => {\r\n  localStorage.removeItem(\"token\");\r\n  appStore.addUser(null);\r\n};\r\n\r\nexport const saveUserHistory = async currentGame => {\r\n  appStore.user.history.push(currentGame);\r\n\r\n  const response = await accountService.saveUserHistory(appStore.user);\r\n\r\n  if (!response.hasError) {\r\n    appStore.addUser(response.payload);\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport { inject, observer } from \"mobx-react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { logout } from \"../../actions/account-actions\";\r\n\r\nexport default inject(\"appStore\")(\r\n  observer(\r\n    class Header extends React.Component {\r\n      onLogout = e => {\r\n        e.preventDefault();\r\n        logout();\r\n      };\r\n\r\n      render() {\r\n        const { userName } = this.props.appStore;\r\n        return (\r\n          <header>\r\n            <div className=\"header-content cont-1120\">\r\n              <div className=\"head-left\">\r\n                <h1>TypeRacer</h1>\r\n              </div>\r\n              <div className=\"head-center\">\r\n                <Link className=\"link\" to=\"/\">\r\n                  Game\r\n                </Link>\r\n                <Link className=\"link\" to=\"/history\">\r\n                  History\r\n                </Link>\r\n              </div>\r\n              <div className=\"head-right\">\r\n                <span className=\"marg-lr-20\">{userName}</span>\r\n                <button className=\"btn btn-green\" onClick={this.onLogout}>\r\n                  Logout\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </header>\r\n        );\r\n      }\r\n    }\r\n  )\r\n);\r\n","import React from \"react\";\r\nimport Header from \"./header\";\r\n\r\nexport default props => {\r\n  const { children } = props;\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Header />\r\n      <main className=\"cont-1120\">{children}</main>\r\n    </React.Fragment>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nexport default props => {\r\n  const { children } = props;\r\n\r\n  return <main>{children}</main>;\r\n};\r\n","import React from \"react\";\r\n\r\nexport default ({ accuracy, speed, onStart }) => {\r\n  return (\r\n    <div className=\"game-result\">\r\n      <div>\r\n        <h3>Game results</h3>\r\n        <p>{`Accuracy: ${accuracy} %`}</p>\r\n        <p>{`Speed: ${speed} wpm`}</p>\r\n      </div>\r\n      <input\r\n        className=\"btn btn-green-border\"\r\n        type=\"button\"\r\n        value=\"Start new game\"\r\n        onClick={onStart}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nexport default ({\r\n  time,\r\n  speed,\r\n  textSplited,\r\n  currentText,\r\n  onTyped,\r\n  onStart\r\n}) => {\r\n  return (\r\n    <div>\r\n      <div className=\"game-info\">\r\n        <p>{`Time: ${time}`}</p>\r\n        <p>{`Speed: ${speed} wpm`}</p>\r\n        <p>{`Accuracy:  ${speed} %`}</p>\r\n      </div>\r\n      <div className=\"game-text\">\r\n        {textSplited.map(part => {\r\n          let className = \"txt\";\r\n          if (part.isWrong === true) {\r\n            className = \"wrong-txt\";\r\n          }\r\n          if (part.isWrong === false) {\r\n            className = \"right-txt\";\r\n          }\r\n          return (\r\n            <span key={part.id} className={className}>{`${part.text} `}</span>\r\n          );\r\n        })}\r\n      </div>\r\n      <div className=\"game-inp\">\r\n        <input type=\"text\" value={currentText} onChange={onTyped} />\r\n      </div>\r\n      <div className=\"text-center\">\r\n        <input\r\n          className=\"btn btn-green-border\"\r\n          type=\"button\"\r\n          value=\"Restart game\"\r\n          onClick={onStart}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import fetchApi from \"../utils/fetch\";\r\nimport { requestStore } from \"../stores\";\r\nimport * as api from \"../constants/api\";\r\nimport * as requestTypes from \"../constants/request-types\";\r\nimport ServiceResponse from \"../utils/service-response\";\r\n\r\nexport const getRandomText = async () => {\r\n  requestStore.setRequestInProcess(requestTypes.GET_RANDOM_TEXT_REQUEST, true);\r\n\r\n  const response = new ServiceResponse();\r\n\r\n  try {\r\n    const payload = await fetchApi(api.GET_RANDOM_TEXT, {\r\n      method: \"GET\",\r\n      headers: {}\r\n    });\r\n    if (payload && payload.length > 0) {\r\n      response.payload = payload.join(\"\");\r\n    }\r\n  } catch (err) {\r\n    response.addError(err.message);\r\n  }\r\n\r\n  requestStore.setRequestInProcess(requestTypes.GET_RANDOM_TEXT_REQUEST, false);\r\n\r\n  return response;\r\n};\r\n","import { gameStore } from \"../stores\";\r\nimport { getRandomText } from \"../services/game-service\";\r\n\r\nexport const startNewGame = async () => {\r\n  const response = await getRandomText();\r\n  if (!response.hasError) {\r\n    gameStore.start(response.payload);\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport { inject, observer } from \"mobx-react\";\r\n\r\nimport GameResult from \"./game-result\";\r\nimport GameArea from \"./game-area\";\r\nimport { startNewGame } from \"../../actions/game-actions\";\r\n\r\nexport default inject(\"gameStore\")(\r\n  observer(\r\n    class Game extends React.Component {\r\n      componentDidMount() {\r\n        const { stop } = this.props.gameStore;\r\n        stop(true);\r\n      }\r\n\r\n      componentWillUnmount() {\r\n        const { stop } = this.props.gameStore;\r\n        stop(true);\r\n      }\r\n\r\n      onStart = () => {\r\n        startNewGame();\r\n      };\r\n\r\n      onTyped = e => {\r\n        const { setNewText } = this.props.gameStore;\r\n        setNewText(e.target.value);\r\n      };\r\n\r\n      render() {\r\n        const {\r\n          isStarted,\r\n          isFinished,\r\n          textSplited,\r\n          currentText,\r\n          accuracy,\r\n          speed,\r\n          time\r\n        } = this.props.gameStore;\r\n\r\n        return (\r\n          <div className=\"marg-tb-20\">\r\n            {isStarted && !isFinished && (\r\n              <GameArea\r\n                time={time}\r\n                speed={speed}\r\n                textSplited={textSplited}\r\n                currentText={currentText}\r\n                onTyped={this.onTyped}\r\n                onStart={this.onStart}\r\n              />\r\n            )}\r\n            {!isStarted && !isFinished && (\r\n              <div className=\"start-game\">\r\n                <h3>Improve your typing skills on your own</h3>\r\n                <input\r\n                  className=\"btn btn-green-border\"\r\n                  type=\"button\"\r\n                  value=\"Start game\"\r\n                  onClick={this.onStart}\r\n                />\r\n              </div>\r\n            )}\r\n            {!isStarted && isFinished && (\r\n              <GameResult\r\n                accuracy={accuracy}\r\n                speed={speed}\r\n                onStart={this.onStart}\r\n              />\r\n            )}\r\n          </div>\r\n        );\r\n      }\r\n    }\r\n  )\r\n);\r\n","import React from \"react\";\r\nimport { inject, observer } from \"mobx-react\";\r\nimport { login } from \"../../actions/account-actions\";\r\n\r\nexport default inject(\"loginStore\")(\r\n  observer(\r\n    class Login extends React.Component {\r\n      componentDidMount() {\r\n        const { init } = this.props.loginStore;\r\n        init();\r\n      }\r\n\r\n      onUserNameChanged = e => {\r\n        const { onUserNameChanged } = this.props.loginStore;\r\n        onUserNameChanged(e.target.value);\r\n      };\r\n\r\n      onPasswordChanged = e => {\r\n        const { onPasswordChanged } = this.props.loginStore;\r\n        onPasswordChanged(e.target.value);\r\n      };\r\n\r\n      onLogin = () => {\r\n        const { userName, password, addError } = this.props.loginStore;\r\n        if (!userName) {\r\n          addError(\"Fill UserName.\");\r\n        } else if (!password) {\r\n          addError(\"Fill Password.\");\r\n        } else {\r\n          login({ userName, password });\r\n        }\r\n      };\r\n\r\n      render() {\r\n        const { error, userName, password } = this.props.loginStore;\r\n\r\n        return (\r\n          <div className=\"login\">\r\n            <div>\r\n              <h1 className=\"marg-b15\">TypeRacer</h1>\r\n              <div>\r\n                {error && <span className=\"eror-text\">{error}</span>}\r\n                <div className=\"inp-block\">\r\n                  <input\r\n                    type=\"text\"\r\n                    placeholder=\"UserName\"\r\n                    value={userName}\r\n                    onChange={this.onUserNameChanged}\r\n                  />\r\n                </div>\r\n                <div className=\"inp-block\">\r\n                  <input\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    value={password}\r\n                    onChange={this.onPasswordChanged}\r\n                  />\r\n                </div>\r\n                <div>\r\n                  <input\r\n                    className=\"btn btn-green\"\r\n                    type=\"button\"\r\n                    value=\"Login\"\r\n                    disabled={error !== null}\r\n                    onClick={this.onLogin}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        );\r\n      }\r\n    }\r\n  )\r\n);\r\n","import React from \"react\";\r\nimport { inject, observer } from \"mobx-react\";\r\n\r\nexport default inject(\"appStore\")(\r\n  observer(\r\n    class History extends React.Component {\r\n      render() {\r\n        const { history } = this.props.appStore.user;\r\n        return (\r\n          <div>\r\n            <ul className=\"history-head\">\r\n              <li>Date</li>\r\n              <li>Accuracy</li>\r\n              <li>Speed</li>\r\n            </ul>\r\n            {history.map(h => {\r\n              const date = new Date(h.date);\r\n              return (\r\n                <ul className=\"history-content\" key={date.getTime()}>\r\n                  <li>{date.toLocaleString(\"en-US\")}</li>\r\n                  <li>{`${h.accuracy} %`}</li>\r\n                  <li>{`${h.wpm} WPM`}</li>\r\n                </ul>\r\n              );\r\n            })}\r\n          </div>\r\n        );\r\n      }\r\n    }\r\n  )\r\n);\r\n","import React from \"react\";\r\nimport { inject, observer } from \"mobx-react\";\r\nimport { Router, Route, Switch, Redirect } from \"react-router-dom\";\r\n\r\nimport WithHiderLayout from \"./layouts/with-hider-layout\";\r\nimport LoginLayout from \"./layouts/login-layout\";\r\nimport Game from \"./game/\";\r\nimport Login from \"./login/\";\r\nimport History from \"./history/\";\r\nimport { init } from \"../actions/account-actions\";\r\nimport history from \"../utils/history\";\r\nimport { INIT_APP } from \"../constants/request-types\";\r\n\r\nconst AppRoute = ({\r\n  component: Component,\r\n  layout: Layout,\r\n  isPrivate,\r\n  isAuthenticated,\r\n  isLogin\r\n}) => {\r\n  return (\r\n    <Route\r\n      render={props => {\r\n        if (isPrivate && !isAuthenticated) {\r\n          return <Redirect to=\"/login\" />;\r\n        }\r\n        if (isLogin && isAuthenticated) {\r\n          return <Redirect to=\"/\" />;\r\n        }\r\n        return (\r\n          <React.Fragment>\r\n            <Layout>\r\n              <Component {...props} />\r\n            </Layout>\r\n          </React.Fragment>\r\n        );\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default inject(\"appStore\", \"requestStore\")(\r\n  observer(\r\n    class AppRouter extends React.Component {\r\n      componentDidMount() {\r\n        init();\r\n      }\r\n\r\n      render() {\r\n        const { appStore, requestStore } = this.props;\r\n        const isInitialising = requestStore.getRequestByType(INIT_APP);\r\n        const { isAuthenticated } = appStore;\r\n\r\n        return (\r\n          <Router history={history}>\r\n            {!isInitialising && (\r\n              <Switch>\r\n                <AppRoute\r\n                  exact\r\n                  path=\"/\"\r\n                  component={Game}\r\n                  layout={WithHiderLayout}\r\n                  isPrivate\r\n                  isAuthenticated={isAuthenticated}\r\n                />\r\n                <AppRoute\r\n                  exact\r\n                  path=\"/history\"\r\n                  component={History}\r\n                  layout={WithHiderLayout}\r\n                  isPrivate\r\n                  isAuthenticated={isAuthenticated}\r\n                />\r\n                <AppRoute\r\n                  exact\r\n                  path=\"/login\"\r\n                  component={Login}\r\n                  layout={LoginLayout}\r\n                  isLogin\r\n                  isAuthenticated={isAuthenticated}\r\n                />\r\n              </Switch>\r\n            )}\r\n          </Router>\r\n        );\r\n      }\r\n    }\r\n  )\r\n);\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"mobx-react\";\r\n\r\nimport App from \"./components\";\r\nimport * as stores from \"./stores\";\r\nimport \"./styles.css\";\r\n\r\nconst AppRouter = () => {\r\n  return (\r\n    <Provider key=\"provider\" {...stores}>\r\n      <App />\r\n    </Provider>\r\n  );\r\n};\r\n\r\nconst rootElement = document.getElementById(\"root\");\r\nReactDOM.render(<AppRouter />, rootElement);\r\n"],"sourceRoot":""}