{"version":3,"sources":["stores/app-store.js","stores/game-store.js","utils/id.js","stores/request-store.js","stores/login-store.js","utils/fetch.js","constants/api.js","utils/service-response.js","services/account-service.js","constants/request-types.js","utils/history.js","actions/account-actions.js","components/layouts/header.js","components/layouts/with-hider-layout.js","components/layouts/login-layout.js","components/game/game-result.js","components/game/game-area.js","services/game-service.js","actions/game-actions.js","components/game/index.js","components/login/index.js","components/history/index.js","components/index.js","index.js"],"names":["AppStore","user","addUser","_this","this","name","decorate","observable","isAuthenticated","computed","action","appStore","GameStore","start","text","textSplited","split","map","t","id","Math","random","toString","substr","isWrong","currentText","index","isStarted","isFinished","accuracy","speed","time","numberOfKeystroke","startInterval","stop","clearInterval","intervalId","saveUserHistory","wpm","date","Date","calculateSpeed","wrongCount","filter","length","rightCount","accurateWordPercentages","self","setInterval","setNewText","current","startsWith","trim","gameStore","RequestStore","Object","classCallCheck","setRequestInProcess","requestType","inProcess","requests","set","type","get","requestStore","LoginStore","init","userName","password","error","addGuestUser","guest","onUserNameChanged","onPasswordChanged","addError","loginStore","utils_fetch","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","url","options","request","response","result","wrap","_context","prev","next","assign","headers","Accept","Content-Type","method","body","JSON","stringify","fetch","sent","parse","abrupt","_x","_x2","apply","arguments","GET_USER","ServiceResponse","errors","payload","message","push","users","login","_callee2","_context2","Promise","resolve","reject","setTimeout","find","u","fetchApi","concat","api","objectSpread","t0","loginWithToken","_ref3","_callee3","token","_context3","_ref4","_callee4","_context4","_x3","history","createBrowserHistory","accountService","hasError","localStorage","setItem","_ref2","getItem","logout","removeItem","currentGame","inject","observer","_React$Component","Header","_getPrototypeOf2","_len","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","onLogout","e","preventDefault","inherits","createClass","key","value","props","react_default","createElement","className","react_router_dom","to","onClick","React","Component","with_hider_layout","children","Fragment","header","login_layout","game_result","onStart","game_area","onTyped","part","onChange","getRandomText","join","startNewGame","Game","target","_this$props$gameStore","Login","onLogin","_this$props$loginStor","_this$props$loginStor2","placeholder","History","h","AppRoute","component","Layout","layout","isPrivate","isLogin","react_router","render","AppRouter","components_AppRoute","exact","path","WithHiderLayout","LoginLayout","rootElement","document","getElementById","ReactDOM","index_module","stores","components"],"mappings":"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","file":"static/js/main.4ddf07b3.chunk.js","sourcesContent":["import { observable, computed, action, decorate } from \"mobx\";\r\n\r\nclass AppStore {\r\n  user = null;\r\n\r\n  get isAuthenticated() {\r\n    return this.user !== null;\r\n  }\r\n\r\n  get userName() {\r\n    return this.user !== null ? this.user.name : \"\";\r\n  }\r\n\r\n  addUser = user => {\r\n    this.user = user;\r\n  };\r\n}\r\n\r\ndecorate(AppStore, {\r\n  user: observable,\r\n  isAuthenticated: computed,\r\n  addUser: action\r\n});\r\n\r\nconst appStore = new AppStore();\r\n\r\nexport default appStore;\r\n","import { observable, action, decorate } from \"mobx\";\r\n\r\nimport id from \"../utils/id\";\r\nimport { saveUserHistory } from \"../actions/account-actions\";\r\n\r\nclass GameStore {\r\n  text;\r\n  textSplited;\r\n  currentText;\r\n  index;\r\n  isStarted;\r\n  speed;\r\n  accuracy;\r\n  time;\r\n  intervalId;\r\n  numberOfKeystroke;\r\n  isFinished;\r\n\r\n  start = text => {\r\n    this.text = text;\r\n    this.textSplited = text\r\n      .split(\" \")\r\n      .map(t => ({ id: id(), text: t, isWrong: null }));\r\n    this.currentText = \"\";\r\n    this.index = 0;\r\n    this.isStarted = true;\r\n    this.isFinished = false;\r\n    this.accuracy = 0;\r\n    this.speed = 0;\r\n    this.time = 5;\r\n    this.numberOfKeystroke = 0;\r\n    this.startInterval();\r\n  };\r\n\r\n  stop = () => {\r\n    this.isStarted = false;\r\n    this.isFinished = true;\r\n    clearInterval(this.intervalId);\r\n\r\n    saveUserHistory({ wpm: 25, accuracy: 54.45, date: new Date() });\r\n  };\r\n\r\n  calculateSpeed = () => {\r\n    const wrongCount = this.textSplited.filter(t => t.isWrong === true).length;\r\n    const rightCount = this.textSplited.filter(t => t.isWrong === false).length;\r\n    const accurateWordPercentages =\r\n      (rightCount / (wrongCount + rightCount)) * 100;\r\n\r\n    if (accurateWordPercentages !== accurateWordPercentages) {\r\n      this.speed = 0;\r\n    } else {\r\n      this.speed =\r\n        (this.numberOfKeystroke / (120 - this.time)) * accurateWordPercentages;\r\n    }\r\n  };\r\n\r\n  startInterval = () => {\r\n    const self = this;\r\n    this.intervalId = setInterval(() => {\r\n      if (self.time !== 0) {\r\n        self.time--;\r\n      } else {\r\n        self.stop();\r\n      }\r\n    }, 1000);\r\n  };\r\n\r\n  setNewText = text => {\r\n    this.numberOfKeystroke++;\r\n\r\n    const current = this.textSplited[this.index];\r\n    current.isWrong = !current.text.startsWith(text.trim());\r\n\r\n    if (\r\n      !current.isWrong &&\r\n      current.text.length === text.length - 1 &&\r\n      text[text.length - 1] === \" \"\r\n    ) {\r\n      this.currentText = \"\";\r\n      this.index++;\r\n      if (this.index >= this.textSplited.length) {\r\n        this.stop();\r\n      }\r\n\r\n      this.calculateSpeed();\r\n    } else {\r\n      this.currentText = text;\r\n    }\r\n  };\r\n}\r\n\r\ndecorate(GameStore, {\r\n  text: observable,\r\n  textSplited: observable,\r\n  currentText: observable,\r\n  speed: observable,\r\n  accuracy: observable,\r\n  time: observable,\r\n  isStarted: observable,\r\n  isFinished: observable,\r\n  start: action\r\n});\r\n\r\nconst gameStore = new GameStore();\r\n\r\nexport default gameStore;\r\n","export default () => {\r\n  return Math.random()\r\n    .toString(36)\r\n    .substr(5, 12);\r\n};\r\n","import { observable, action, decorate } from \"mobx\";\r\n\r\nclass RequestStore {\r\n  requests;\r\n\r\n  constructor() {\r\n    this.requests = observable.map({});\r\n  }\r\n\r\n  setRequestInProcess = (requestType, inProcess) => {\r\n    this.requests.set(requestType, inProcess);\r\n  };\r\n\r\n  getRequestByType(type) {\r\n    return this.requests.get(type);\r\n  }\r\n}\r\n\r\ndecorate(RequestStore, {\r\n  requests: observable,\r\n  setRequestInProcess: action\r\n});\r\n\r\nconst requestStore = new RequestStore();\r\n\r\nexport default requestStore;\r\n","import { observable, action, decorate } from \"mobx\";\r\n\r\nclass LoginStore {\r\n  userName;\r\n  password;\r\n  error;\r\n\r\n  constructor() {\r\n    this.init();\r\n  }\r\n\r\n  init = () => {\r\n    this.userName = \"\";\r\n    this.password = \"\";\r\n    this.error = null;\r\n  };\r\n\r\n  addGuestUser = guest => {\r\n    this.guest = guest;\r\n  };\r\n\r\n  addUser = user => {\r\n    this.user = user;\r\n  };\r\n\r\n  onUserNameChanged = userName => {\r\n    this.userName = userName;\r\n    this.error = null;\r\n  };\r\n\r\n  onPasswordChanged = password => {\r\n    this.password = password;\r\n    this.error = null;\r\n  };\r\n\r\n  addError = error => {\r\n    this.error = error;\r\n  };\r\n}\r\n\r\ndecorate(LoginStore, {\r\n  userName: observable,\r\n  password: observable,\r\n  error: observable,\r\n  onUserNameChanged: action,\r\n  onPasswordChanged: action,\r\n  addError: action\r\n});\r\n\r\nconst loginStore = new LoginStore();\r\n\r\nexport default loginStore;\r\n","export default async (url, options) => {\r\n  const request = Object.assign(\r\n    {\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      method: \"POST\"\r\n    },\r\n    options\r\n  );\r\n\r\n  if (request.body && typeof request.body !== \"string\") {\r\n    request.body = JSON.stringify(request.body);\r\n  }\r\n\r\n  const response = await fetch(url, request);\r\n\r\n  let result = await response.text();\r\n\r\n  result = result ? JSON.parse(result) : null;\r\n\r\n  return result;\r\n};\r\n","export const GET_USER = \"https://api.myjson.com/bins/\";\r\nexport const SAVE_HISTORY = \"https://api.myjson.com/bins/\";\r\nexport const GET_RANDOM_TEXT =\r\n  \"https://baconipsum.com/api/?type=all-meat&sentences=3\";\r\n","export default class ServiceResponse {\r\n  constructor() {\r\n    this.errors = [];\r\n    this.payload = null;\r\n  }\r\n\r\n  get hasError() {\r\n    return this.errors.length > 0;\r\n  }\r\n\r\n  addError(message) {\r\n    this.errors.push(message);\r\n  }\r\n}\r\n","import fetchApi from \"../utils/fetch\";\r\nimport { requestStore } from \"../stores\";\r\nimport * as api from \"../constants/api\";\r\nimport * as requestTypes from \"../constants/request-types\";\r\nimport ServiceResponse from \"../utils/service-response\";\r\n\r\nconst users = [\r\n  { id: \"cutec\", userName: \"user1\", password: \"qwerty\" },\r\n  { id: \"177x90\", userName: \"user2\", password: \"qwerty\" }\r\n];\r\n\r\nexport const login = async request => {\r\n  requestStore.setRequestInProcess(requestTypes.LOGIN_REQUEST, true);\r\n\r\n  return new Promise((resolve, reject) => {\r\n    setTimeout(async () => {\r\n      const response = new ServiceResponse();\r\n\r\n      const user = users.find(\r\n        u => u.userName === request.userName && u.password === request.password\r\n      );\r\n      if (user) {\r\n        try {\r\n          const payload = await fetchApi(`${api.GET_USER}${user.id}`, {\r\n            method: \"GET\",\r\n            headers: {}\r\n          });\r\n          if (payload) {\r\n            response.payload = { id: user.id, ...payload };\r\n          }\r\n        } catch (err) {\r\n          response.addError(err.message);\r\n        }\r\n      } else {\r\n        response.addError(\"UserName or password is wrong.\");\r\n      }\r\n\r\n      requestStore.setRequestInProcess(requestTypes.LOGIN_REQUEST, false);\r\n      resolve(response);\r\n    }, 500);\r\n  });\r\n};\r\n\r\nexport const loginWithToken = async token => {\r\n  requestStore.setRequestInProcess(requestTypes.LOGIN_REQUEST, true);\r\n  const response = new ServiceResponse();\r\n\r\n  try {\r\n    const payload = await fetchApi(`${api.GET_USER}${token}`, {\r\n      method: \"GET\",\r\n      headers: {}\r\n    });\r\n    if (payload) {\r\n      response.payload = { id: token, ...payload };\r\n    }\r\n  } catch (err) {\r\n    response.addError(err.message);\r\n  }\r\n\r\n  requestStore.setRequestInProcess(requestTypes.LOGIN_REQUEST, false);\r\n\r\n  return response;\r\n};\r\n\r\nexport const saveUserHistory = async user => {\r\n  requestStore.setRequestInProcess(requestTypes.SAVE_HISTORY_REQUEST, true);\r\n\r\n  const response = new ServiceResponse();\r\n\r\n  try {\r\n    const payload = await fetchApi(`${api.SAVE_HISTORY}${user.id}`, {\r\n      method: \"PUT\",\r\n      body: user\r\n    });\r\n\r\n    if (payload) {\r\n      response.payload = payload;\r\n    }\r\n  } catch (err) {\r\n    response.addError(err.message);\r\n  }\r\n\r\n  requestStore.setRequestInProcess(requestTypes.SAVE_HISTORY_REQUEST, false);\r\n\r\n  return response;\r\n};\r\n","export const LOGIN_REQUEST = \"LOGIN_REQUEST\";\r\nexport const REGISTER_REQUEST = \"REGISTER_REQUEST\";\r\nexport const GET_RANDOM_TEXT_REQUEST = \"GET_RANDOM_TEXT_REQUEST\";\r\nexport const SAVE_HISTORY_REQUEST = \"SAVE_HISTORY_REQUEST\";\r\n","import { createBrowserHistory } from \"history\";\r\n\r\nconst history = createBrowserHistory();\r\nexport default history;\r\n","import { appStore, loginStore } from \"../stores\";\r\nimport * as accountService from \"../services/account-service\";\r\nimport history from \"../utils/history\";\r\n\r\nexport const login = async request => {\r\n  const response = await accountService.login(request);\r\n  if (!response.hasError) {\r\n    localStorage.setItem(\"token\", response.payload.id);\r\n\r\n    appStore.addUser(response.payload);\r\n    history.push(\"/\");\r\n  } else {\r\n    loginStore.addError(response.errors);\r\n  }\r\n};\r\n\r\nexport const init = async () => {\r\n  const token = localStorage.getItem(\"token\");\r\n\r\n  if (token) {\r\n    const response = await accountService.loginWithToken(token);\r\n    if (!response.hasError) {\r\n      appStore.addUser(response.payload);\r\n      history.push(\"/\");\r\n    }\r\n  }\r\n};\r\n\r\nexport const logout = () => {\r\n  localStorage.removeItem(\"token\");\r\n  appStore.addUser(null);\r\n};\r\n\r\nexport const saveUserHistory = async currentGame => {\r\n  appStore.user.history.push(currentGame);\r\n\r\n  const response = await accountService.saveUserHistory(appStore.user);\r\n\r\n  if (!response.hasError) {\r\n    appStore.addUser(response.payload);\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport { inject, observer } from \"mobx-react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { logout } from \"../../actions/account-actions\";\r\n\r\nexport default inject(\"appStore\")(\r\n  observer(\r\n    class Header extends React.Component {\r\n      onLogout = e => {\r\n        e.preventDefault();\r\n        logout();\r\n      };\r\n\r\n      render() {\r\n        const { userName } = this.props.appStore;\r\n        return (\r\n          <header>\r\n            <div className=\"header-content cont-1120\">\r\n              <div className=\"head-left\">\r\n                <h1>TypeRacer</h1>\r\n              </div>\r\n              <div className=\"head-center\">\r\n                <Link className=\"link\" to=\"/\">\r\n                  Game\r\n                </Link>\r\n                <Link className=\"link\" to=\"/history\">\r\n                  History\r\n                </Link>\r\n              </div>\r\n              <div className=\"head-right\">\r\n                <span className=\"marg-lr-20\">{userName}</span>\r\n                <button className=\"btn btn-green\" onClick={this.onLogout}>\r\n                  Logout\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </header>\r\n        );\r\n      }\r\n    }\r\n  )\r\n);\r\n","import React from \"react\";\r\nimport Header from \"./header\";\r\n\r\nexport default props => {\r\n  const { children } = props;\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Header />\r\n      <main className=\"cont-1120\">{children}</main>\r\n    </React.Fragment>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nexport default props => {\r\n  const { children } = props;\r\n\r\n  return <main>{children}</main>;\r\n};\r\n","import React from \"react\";\r\n\r\nexport default ({ accuracy, speed, onStart }) => {\r\n  return (\r\n    <div>\r\n      <p>{`Accuracy: ${accuracy} %`}</p>\r\n      <p>{`Speed: ${speed} wpm`}</p>\r\n      <input\r\n        className=\"btn btn-green-border\"\r\n        type=\"button\"\r\n        value=\"Start new game\"\r\n        onClick={onStart}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nexport default ({ time, speed, textSplited, currentText, onTyped }) => {\r\n  return (\r\n    <div>\r\n      <div>\r\n        <p>{`${time}`}</p>\r\n        <p>{`${speed} wpm`}</p>\r\n      </div>\r\n      <div>\r\n        {textSplited.map(part => {\r\n          let className = \"txt\";\r\n          if (part.isWrong === true) {\r\n            className = \"wrong-txt\";\r\n          }\r\n          if (part.isWrong === false) {\r\n            className = \"right-txt\";\r\n          }\r\n          return (\r\n            <span key={part.id} className={className}>{`${part.text} `}</span>\r\n          );\r\n        })}\r\n      </div>\r\n      <div>\r\n        <input type=\"text\" value={currentText} onChange={onTyped} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import fetchApi from \"../utils/fetch\";\r\nimport { requestStore } from \"../stores\";\r\nimport * as api from \"../constants/api\";\r\nimport * as requestTypes from \"../constants/request-types\";\r\nimport ServiceResponse from \"../utils/service-response\";\r\n\r\nexport const getRandomText = async () => {\r\n  requestStore.setRequestInProcess(requestTypes.GET_RANDOM_TEXT_REQUEST, true);\r\n\r\n  const response = new ServiceResponse();\r\n\r\n  try {\r\n    const payload = await fetchApi(api.GET_RANDOM_TEXT, {\r\n      method: \"GET\",\r\n      headers: {}\r\n    });\r\n    if (payload && payload.length > 0) {\r\n      response.payload = payload.join(\"\");\r\n    }\r\n  } catch (err) {\r\n    response.addError(err.message);\r\n  }\r\n\r\n  requestStore.setRequestInProcess(requestTypes.GET_RANDOM_TEXT_REQUEST, false);\r\n\r\n  return response;\r\n};\r\n","import { gameStore } from \"../stores\";\r\nimport { getRandomText } from \"../services/game-service\";\r\n\r\nexport const startNewGame = async () => {\r\n  const response = await getRandomText();\r\n  if (!response.hasError) {\r\n    gameStore.start(response.payload);\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport { inject, observer } from \"mobx-react\";\r\n\r\nimport GameResult from \"./game-result\";\r\nimport GameArea from \"./game-area\";\r\nimport { startNewGame } from \"../../actions/game-actions\";\r\n\r\nexport default inject(\"gameStore\")(\r\n  observer(\r\n    class Game extends React.Component {\r\n      onStart = () => {\r\n        startNewGame();\r\n      };\r\n\r\n      onTyped = e => {\r\n        const { setNewText } = this.props.gameStore;\r\n        setNewText(e.target.value);\r\n      };\r\n\r\n      render() {\r\n        const {\r\n          isStarted,\r\n          isFinished,\r\n          textSplited,\r\n          currentText,\r\n          accuracy,\r\n          speed,\r\n          time\r\n        } = this.props.gameStore;\r\n\r\n        return (\r\n          <div className=\"marg-tb-20\">\r\n            {isStarted && !isFinished && (\r\n              <GameArea\r\n                time={time}\r\n                speed={speed}\r\n                textSplited={textSplited}\r\n                currentText={currentText}\r\n                onTyped={this.onTyped}\r\n              />\r\n            )}\r\n            {!isStarted && !isFinished && (\r\n              <div>\r\n                <input\r\n                  className=\"btn btn-green-border\"\r\n                  type=\"button\"\r\n                  value=\"Start game\"\r\n                  onClick={this.onStart}\r\n                />\r\n              </div>\r\n            )}\r\n            {!isStarted && isFinished && (\r\n              <GameResult\r\n                accuracy={accuracy}\r\n                speed={speed}\r\n                onStart={this.onStart}\r\n              />\r\n            )}\r\n          </div>\r\n        );\r\n      }\r\n    }\r\n  )\r\n);\r\n","import React from \"react\";\r\nimport { inject, observer } from \"mobx-react\";\r\nimport { login } from \"../../actions/account-actions\";\r\n\r\nexport default inject(\"loginStore\")(\r\n  observer(\r\n    class Login extends React.Component {\r\n      componentDidMount() {\r\n        const { init } = this.props.loginStore;\r\n        init();\r\n      }\r\n\r\n      onUserNameChanged = e => {\r\n        const { onUserNameChanged } = this.props.loginStore;\r\n        onUserNameChanged(e.target.value);\r\n      };\r\n\r\n      onPasswordChanged = e => {\r\n        const { onPasswordChanged } = this.props.loginStore;\r\n        onPasswordChanged(e.target.value);\r\n      };\r\n\r\n      onLogin = () => {\r\n        const { userName, password, addError } = this.props.loginStore;\r\n        if (!userName) {\r\n          addError(\"Fill UserName.\");\r\n        } else if (!password) {\r\n          addError(\"Fill Password.\");\r\n        } else {\r\n          login({ userName, password });\r\n        }\r\n      };\r\n\r\n      render() {\r\n        const { error, userName, password } = this.props.loginStore;\r\n\r\n        return (\r\n          <div className=\"login\">\r\n            <div>\r\n              <h1 className=\"marg-b15\">TypeRacer</h1>\r\n              <div>\r\n                {error && <span>{error}</span>}\r\n                <div className=\"inp-block\">\r\n                  <input\r\n                    type=\"text\"\r\n                    placeholder=\"UserName\"\r\n                    value={userName}\r\n                    onChange={this.onUserNameChanged}\r\n                  />\r\n                </div>\r\n                <div className=\"inp-block\">\r\n                  <input\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    value={password}\r\n                    onChange={this.onPasswordChanged}\r\n                  />\r\n                </div>\r\n                <div>\r\n                  <input\r\n                    className=\"btn btn-green\"\r\n                    type=\"button\"\r\n                    value=\"Login\"\r\n                    onClick={this.onLogin}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        );\r\n      }\r\n    }\r\n  )\r\n);\r\n","import React from \"react\";\r\nimport { inject, observer } from \"mobx-react\";\r\n\r\nexport default inject(\"appStore\")(\r\n  observer(\r\n    class History extends React.Component {\r\n      render() {\r\n        const { history } = this.props.appStore.user;\r\n        return (\r\n          <div>\r\n            <ul>\r\n              <li>Date</li>\r\n              <li>Accuracy</li>\r\n              <li>Speed</li>\r\n            </ul>\r\n            {history.map(h => {\r\n              return (\r\n                <ul>\r\n                  <li>{h.date}</li>\r\n                  <li>{h.accuracy}</li>\r\n                  <li>{h.wpm}</li>\r\n                </ul>\r\n              );\r\n            })}\r\n          </div>\r\n        );\r\n      }\r\n    }\r\n  )\r\n);\r\n","import React from \"react\";\r\nimport { inject, observer } from \"mobx-react\";\r\nimport { Router, Route, Switch, Redirect } from \"react-router-dom\";\r\n\r\nimport WithHiderLayout from \"./layouts/with-hider-layout\";\r\nimport LoginLayout from \"./layouts/login-layout\";\r\nimport Game from \"./game/\";\r\nimport Login from \"./login/\";\r\nimport History from \"./history/\";\r\nimport { init } from \"../actions/account-actions\";\r\nimport history from \"../utils/history\";\r\n\r\nconst AppRoute = ({\r\n  component: Component,\r\n  layout: Layout,\r\n  isPrivate,\r\n  isAuthenticated,\r\n  isLogin\r\n}) => {\r\n  return (\r\n    <Route\r\n      render={props => {\r\n        if (isPrivate && !isAuthenticated) {\r\n          return <Redirect to=\"/login\" />;\r\n        }\r\n        if (isLogin && isAuthenticated) {\r\n          return <Redirect to=\"/\" />;\r\n        }\r\n        return (\r\n          <React.Fragment>\r\n            <Layout>\r\n              <Component {...props} />\r\n            </Layout>\r\n          </React.Fragment>\r\n        );\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default inject(\"appStore\")(\r\n  observer(\r\n    class AppRouter extends React.Component {\r\n      componentDidMount() {\r\n        init();\r\n      }\r\n\r\n      render() {\r\n        const { isAuthenticated } = this.props.appStore;\r\n        return (\r\n          <Router history={history}>\r\n            <Switch>\r\n              <AppRoute\r\n                exact\r\n                path=\"/\"\r\n                component={Game}\r\n                layout={WithHiderLayout}\r\n                isPrivate\r\n                isAuthenticated={isAuthenticated}\r\n              />\r\n              <AppRoute\r\n                exact\r\n                path=\"/history\"\r\n                component={History}\r\n                layout={WithHiderLayout}\r\n                isPrivate\r\n                isAuthenticated={isAuthenticated}\r\n              />\r\n              <AppRoute\r\n                exact\r\n                path=\"/login\"\r\n                component={Login}\r\n                layout={LoginLayout}\r\n                isLogin\r\n                isAuthenticated={isAuthenticated}\r\n              />\r\n            </Switch>\r\n          </Router>\r\n        );\r\n      }\r\n    }\r\n  )\r\n);\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"mobx-react\";\r\n\r\nimport App from \"./components\";\r\nimport * as stores from \"./stores\";\r\nimport \"./styles.css\";\r\n\r\nconst AppRouter = () => {\r\n  return (\r\n    <Provider key=\"provider\" {...stores}>\r\n      <App />\r\n    </Provider>\r\n  );\r\n};\r\n\r\nconst rootElement = document.getElementById(\"root\");\r\nReactDOM.render(<AppRouter />, rootElement);\r\n"],"sourceRoot":""}